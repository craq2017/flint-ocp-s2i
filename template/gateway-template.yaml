apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: flint-gateway
  template: flint-gateway
message: 'The following service(s) have been created in your project: ${NAME}.'
metadata:
  annotations:
    description: FLINT
    openshift.io/display-name: flint-gateway
    openshift.io/documentation-url: https://gnivc.ru
    openshift.io/provider-display-name: GNIVC
    template.openshift.io/bindable: "false"
  creationTimestamp: null
  name: flint-gateway
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${SERVICE_NAME}", "kind":
        "Service"}]'
    name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0%
        maxUnavailable: 100%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: GATEWAY_PORT
            value: ${GATEWAY_PORT}
          - name: INCIDENTS_URL
            value: ${INCIDENTS_URL}
          - name: INSPECTIONS_URL
            value: ${INSPECTIONS_URL}
          - name: ANALYSIS_RESULTS_URL
            value: ${ANALYSIS_RESULTS_URL}
          - name: ALGORITHMS_URL
            value: ${ALGORITHMS_URL}
          - name: REQUESTS_URL
            value: ${REQUESTS_URL}
          - name: AUTHORIZATION_URL
            value: ${AUTHORIZATION_URL}
          image: ${NAME}
          name: ${NAME}
          ports:
          - containerPort: 8080
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name assigned to all of the objects defined in this template. For successful deployment there have to be imagestream with same name in chosen namespace.
  displayName: Name
  name: NAME
  required: true
  value: gateway
- description: Maximum amount of memory the service-ac container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: The exposed hostname that will route to the service-ac, if left blank
    a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- displayName: Service Name
  name: SERVICE_NAME
  required: true
  value: gateway
- displayName: GATEWAY_PORT
  name: GATEWAY_PORT
  value: "8080"
- displayName: INCIDENTS_URL
  name: INCIDENTS_URL
  value: 'http://incident-core:8080'
- displayName: INSPECTIONS_URL
  name: INSPECTIONS_URL
  value: 'http://qaplan:8080'
- displayName: ANALYSIS_RESULTS_URL
  name: ANALYSIS_RESULTS_URL
  value: 'http://analysis-results:8080'
- displayName: ALGORITHMS_URL
  name: ALGORITHMS_URL
  value: 'http://services-ac:8080/api/v1'
- displayName: REQUESTS_URL
  name: REQUESTS_URL
  value: 'http://services-requests:8080'
- displayName: AUTHORIZATION_URL
  name: AUTHORIZATION_URL
  value: 'http://auth-service:8080'
